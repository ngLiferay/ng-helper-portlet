package com.liferaying.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.InfrastructureUtil;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import com.liferay.portlet.journal.service.persistence.JournalArticlePersistence;
import com.liferay.portlet.journal.service.persistence.JournalFolderPersistence;

import com.liferaying.service.JournalArticleServicesService;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the journal article services remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferaying.service.impl.JournalArticleServicesServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.liferaying.service.impl.JournalArticleServicesServiceImpl
 * @see com.liferaying.service.JournalArticleServicesServiceUtil
 * @generated
 */
public abstract class JournalArticleServicesServiceBaseImpl
    extends BaseServiceImpl implements JournalArticleServicesService,
        IdentifiableBean {
    @BeanReference(type = com.liferaying.service.JournalArticleServicesService.class)
    protected com.liferaying.service.JournalArticleServicesService journalArticleServicesService;
    @BeanReference(type = com.liferaying.service.NGServicesService.class)
    protected com.liferaying.service.NGServicesService ngServicesService;
    @BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
    protected com.liferay.counter.service.CounterLocalService counterLocalService;
    @BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
    protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
    @BeanReference(type = com.liferay.portal.service.UserLocalService.class)
    protected com.liferay.portal.service.UserLocalService userLocalService;
    @BeanReference(type = com.liferay.portal.service.UserService.class)
    protected com.liferay.portal.service.UserService userService;
    @BeanReference(type = UserPersistence.class)
    protected UserPersistence userPersistence;
    @BeanReference(type = com.liferay.portlet.journal.service.JournalArticleLocalService.class)
    protected com.liferay.portlet.journal.service.JournalArticleLocalService journalArticleLocalService;
    @BeanReference(type = com.liferay.portlet.journal.service.JournalArticleService.class)
    protected com.liferay.portlet.journal.service.JournalArticleService journalArticleService;
    @BeanReference(type = JournalArticlePersistence.class)
    protected JournalArticlePersistence journalArticlePersistence;
    @BeanReference(type = com.liferay.portlet.journal.service.JournalFolderLocalService.class)
    protected com.liferay.portlet.journal.service.JournalFolderLocalService journalFolderLocalService;
    @BeanReference(type = com.liferay.portlet.journal.service.JournalFolderService.class)
    protected com.liferay.portlet.journal.service.JournalFolderService journalFolderService;
    @BeanReference(type = JournalFolderPersistence.class)
    protected JournalFolderPersistence journalFolderPersistence;
    private String _beanIdentifier;
    private ClassLoader _classLoader;
    private JournalArticleServicesServiceClpInvoker _clpInvoker = new JournalArticleServicesServiceClpInvoker();

    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. Always use {@link com.liferaying.service.JournalArticleServicesServiceUtil} to access the journal article services remote service.
     */

    /**
     * Returns the journal article services remote service.
     *
     * @return the journal article services remote service
     */
    public com.liferaying.service.JournalArticleServicesService getJournalArticleServicesService() {
        return journalArticleServicesService;
    }

    /**
     * Sets the journal article services remote service.
     *
     * @param journalArticleServicesService the journal article services remote service
     */
    public void setJournalArticleServicesService(
        com.liferaying.service.JournalArticleServicesService journalArticleServicesService) {
        this.journalArticleServicesService = journalArticleServicesService;
    }

    /**
     * Returns the n g services remote service.
     *
     * @return the n g services remote service
     */
    public com.liferaying.service.NGServicesService getNGServicesService() {
        return ngServicesService;
    }

    /**
     * Sets the n g services remote service.
     *
     * @param ngServicesService the n g services remote service
     */
    public void setNGServicesService(
        com.liferaying.service.NGServicesService ngServicesService) {
        this.ngServicesService = ngServicesService;
    }

    /**
     * Returns the counter local service.
     *
     * @return the counter local service
     */
    public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
        return counterLocalService;
    }

    /**
     * Sets the counter local service.
     *
     * @param counterLocalService the counter local service
     */
    public void setCounterLocalService(
        com.liferay.counter.service.CounterLocalService counterLocalService) {
        this.counterLocalService = counterLocalService;
    }

    /**
     * Returns the resource local service.
     *
     * @return the resource local service
     */
    public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
        return resourceLocalService;
    }

    /**
     * Sets the resource local service.
     *
     * @param resourceLocalService the resource local service
     */
    public void setResourceLocalService(
        com.liferay.portal.service.ResourceLocalService resourceLocalService) {
        this.resourceLocalService = resourceLocalService;
    }

    /**
     * Returns the user local service.
     *
     * @return the user local service
     */
    public com.liferay.portal.service.UserLocalService getUserLocalService() {
        return userLocalService;
    }

    /**
     * Sets the user local service.
     *
     * @param userLocalService the user local service
     */
    public void setUserLocalService(
        com.liferay.portal.service.UserLocalService userLocalService) {
        this.userLocalService = userLocalService;
    }

    /**
     * Returns the user remote service.
     *
     * @return the user remote service
     */
    public com.liferay.portal.service.UserService getUserService() {
        return userService;
    }

    /**
     * Sets the user remote service.
     *
     * @param userService the user remote service
     */
    public void setUserService(
        com.liferay.portal.service.UserService userService) {
        this.userService = userService;
    }

    /**
     * Returns the user persistence.
     *
     * @return the user persistence
     */
    public UserPersistence getUserPersistence() {
        return userPersistence;
    }

    /**
     * Sets the user persistence.
     *
     * @param userPersistence the user persistence
     */
    public void setUserPersistence(UserPersistence userPersistence) {
        this.userPersistence = userPersistence;
    }

    /**
     * Returns the journal article local service.
     *
     * @return the journal article local service
     */
    public com.liferay.portlet.journal.service.JournalArticleLocalService getJournalArticleLocalService() {
        return journalArticleLocalService;
    }

    /**
     * Sets the journal article local service.
     *
     * @param journalArticleLocalService the journal article local service
     */
    public void setJournalArticleLocalService(
        com.liferay.portlet.journal.service.JournalArticleLocalService journalArticleLocalService) {
        this.journalArticleLocalService = journalArticleLocalService;
    }

    /**
     * Returns the journal article remote service.
     *
     * @return the journal article remote service
     */
    public com.liferay.portlet.journal.service.JournalArticleService getJournalArticleService() {
        return journalArticleService;
    }

    /**
     * Sets the journal article remote service.
     *
     * @param journalArticleService the journal article remote service
     */
    public void setJournalArticleService(
        com.liferay.portlet.journal.service.JournalArticleService journalArticleService) {
        this.journalArticleService = journalArticleService;
    }

    /**
     * Returns the journal article persistence.
     *
     * @return the journal article persistence
     */
    public JournalArticlePersistence getJournalArticlePersistence() {
        return journalArticlePersistence;
    }

    /**
     * Sets the journal article persistence.
     *
     * @param journalArticlePersistence the journal article persistence
     */
    public void setJournalArticlePersistence(
        JournalArticlePersistence journalArticlePersistence) {
        this.journalArticlePersistence = journalArticlePersistence;
    }

    /**
     * Returns the journal folder local service.
     *
     * @return the journal folder local service
     */
    public com.liferay.portlet.journal.service.JournalFolderLocalService getJournalFolderLocalService() {
        return journalFolderLocalService;
    }

    /**
     * Sets the journal folder local service.
     *
     * @param journalFolderLocalService the journal folder local service
     */
    public void setJournalFolderLocalService(
        com.liferay.portlet.journal.service.JournalFolderLocalService journalFolderLocalService) {
        this.journalFolderLocalService = journalFolderLocalService;
    }

    /**
     * Returns the journal folder remote service.
     *
     * @return the journal folder remote service
     */
    public com.liferay.portlet.journal.service.JournalFolderService getJournalFolderService() {
        return journalFolderService;
    }

    /**
     * Sets the journal folder remote service.
     *
     * @param journalFolderService the journal folder remote service
     */
    public void setJournalFolderService(
        com.liferay.portlet.journal.service.JournalFolderService journalFolderService) {
        this.journalFolderService = journalFolderService;
    }

    /**
     * Returns the journal folder persistence.
     *
     * @return the journal folder persistence
     */
    public JournalFolderPersistence getJournalFolderPersistence() {
        return journalFolderPersistence;
    }

    /**
     * Sets the journal folder persistence.
     *
     * @param journalFolderPersistence the journal folder persistence
     */
    public void setJournalFolderPersistence(
        JournalFolderPersistence journalFolderPersistence) {
        this.journalFolderPersistence = journalFolderPersistence;
    }

    public void afterPropertiesSet() {
        Class<?> clazz = getClass();

        _classLoader = clazz.getClassLoader();
    }

    public void destroy() {
    }

    /**
     * Returns the Spring bean ID for this bean.
     *
     * @return the Spring bean ID for this bean
     */
    @Override
    public String getBeanIdentifier() {
        return _beanIdentifier;
    }

    /**
     * Sets the Spring bean ID for this bean.
     *
     * @param beanIdentifier the Spring bean ID for this bean
     */
    @Override
    public void setBeanIdentifier(String beanIdentifier) {
        _beanIdentifier = beanIdentifier;
    }

    @Override
    public Object invokeMethod(String name, String[] parameterTypes,
        Object[] arguments) throws Throwable {
        Thread currentThread = Thread.currentThread();

        ClassLoader contextClassLoader = currentThread.getContextClassLoader();

        if (contextClassLoader != _classLoader) {
            currentThread.setContextClassLoader(_classLoader);
        }

        try {
            return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
        } finally {
            if (contextClassLoader != _classLoader) {
                currentThread.setContextClassLoader(contextClassLoader);
            }
        }
    }

    /**
     * Performs an SQL query.
     *
     * @param sql the sql query
     */
    protected void runSQL(String sql) throws SystemException {
        try {
            DataSource dataSource = InfrastructureUtil.getDataSource();

            SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
                    sql, new int[0]);

            sqlUpdate.update();
        } catch (Exception e) {
            throw new SystemException(e);
        }
    }
}
